<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui">
	
	
<h:body>
	<f:metadata>
		<f:viewParam name="name" value="#{registryBean.petalsNode}" converter="#{nodeConvertor}" required="false" />
	</f:metadata>

	<ui:composition template="/template/commonLayout.xhtml">
		<ui:define name="header">
			<h1>
				<h:link outcome="node" title="#{msg['node.back']}">
					#{registryBean.getRequestParameter()}<f:param name="name" value="#{registryBean.getRequestParameter()}" />
				</h:link>
				 » #{msg['registry.title']}</h1>
			<p class="page-description">#{msg['registry.description']}.</p>
		</ui:define>

		<ui:define name="content">
		<div id="edpt-list">
			<input type="text" class="search" />
			
			<!-- FIXME: test that the registry object is not null -->
			<!-- Make something that can be used everywhere... Same error message = "Petals is probably not online." -->
			
			<table class="list">
				<tr>
					<th class="sort" data-sort="interface">Interface</th>
					<th class="sort" data-sort="service">Service</th>
					<th class="sort" data-sort="endpoint">End-point</th>
					<th class="sort" data-sort="component">Composant Associé</th>
					<th class="sort" data-sort="container">Conteneur Petals</th>
				</tr>
			
				<ui:repeat value="#{registryBean.getRegistryData()}" var="edpt">
					<tr>
						<td class="interface">#{registryBean.formatInterfaceNames(edpt.interfaceNames)}</td>
						<td class="service">#{registryBean.formatQNameCandidate(edpt.serviceName)}</td>
						<td class="endpoint">#{edpt.endpointName}</td>
						<td class="component">#{edpt.componentName}</td>
						<td class="container">#{edpt.containerName}</td>
					</tr>
				</ui:repeat>
			</table>
			
			<h:outputScript library="default" name="javascript/list.min.js" />
			<script type="text/javascript">
				var options = {valueNames: [ 'interface', 'service', 'endpoint', 'component', 'container' ]};
				var hackerList = new List('edpt-list', options);
			</script>
		</div>
		</ui:define>
	</ui:composition>
</h:body>
</html>
